package frame.internals;

import entitys.Producto;
import frame.Menu;
import static frame.Menu.listaProductos;
import frame.internals.eliminar.Eliminar;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author julan
 */
public class GestionProductos extends javax.swing.JInternalFrame {

    private Producto prodEncontrado = null;
    private DefaultTableModel modelog = new DefaultTableModel() {
        public boolean esCeldaEditable1(int f, int c) {
            return false;
        }
    };

    /**
     * Creates new form GestionProductos
     */
    public GestionProductos() {
        initComponents();
        armarCabecera();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jtfCodigo = new javax.swing.JTextField();
        jtfDescripcion = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtfPrecio = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jcbRubro = new javax.swing.JComboBox<>();
        jbSalir = new javax.swing.JButton();
        jbNuevo = new javax.swing.JButton();
        jbGuardar = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTablaGestion = new javax.swing.JTable();
        jcbCategoria = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jbBuscar = new javax.swing.JButton();
        jsStock = new javax.swing.JSpinner();
        jbActualizar = new javax.swing.JButton();

        setTitle("Gestión de Productos");
        setToolTipText("");

        jLabel2.setText("Código:");

        jtfCodigo.setEnabled(false);
        jtfCodigo.setFocusCycleRoot(true);
        jtfCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCodigoActionPerformed(evt);
            }
        });

        jtfDescripcion.setEnabled(false);
        jtfDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfDescripcionActionPerformed(evt);
            }
        });

        jLabel3.setText("Descripcion");

        jtfPrecio.setText("0.00");
        jtfPrecio.setEnabled(false);
        jtfPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfPrecioActionPerformed(evt);
            }
        });

        jLabel4.setText("Precio");

        jLabel5.setText("Rubro");

        jLabel6.setText("Stock");

        jcbRubro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "COMESTIBLE", "LIMPIEZA", "PERFUMERIA" }));
        jcbRubro.setEnabled(false);

        jbSalir.setBackground(new java.awt.Color(255, 255, 255));
        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jbNuevo.setBackground(new java.awt.Color(255, 255, 255));
        jbNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos netbeans/icons8-producto-50.png"))); // NOI18N
        jbNuevo.setText("Nuevo");
        jbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevoActionPerformed(evt);
            }
        });

        jbGuardar.setBackground(new java.awt.Color(255, 255, 255));
        jbGuardar.setText("Guardar");
        jbGuardar.setEnabled(false);
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        jbEliminar.setBackground(new java.awt.Color(255, 255, 255));
        jbEliminar.setForeground(new java.awt.Color(60, 63, 65));
        jbEliminar.setText("Eliminar");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jLabel7.setText("$");

        jLabel8.setText("Unidades disponibles.");

        jtTablaGestion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtTablaGestion);

        jcbCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TODOS", "COMESTIBLE", "LIMPIEZA", "PERFUMERIA" }));
        jcbCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbCategoriaActionPerformed(evt);
            }
        });

        jLabel9.setText("Categoria");

        jbBuscar.setBackground(new java.awt.Color(255, 255, 255));
        jbBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos netbeans/icons8-magnifying-glass-tilted-right-48.png"))); // NOI18N
        jbBuscar.setText("Buscar");
        jbBuscar.setEnabled(false);
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jsStock.setEnabled(false);

        jbActualizar.setBackground(new java.awt.Color(255, 255, 255));
        jbActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos netbeans/icons8-aprobar-y-actualizar-48.png"))); // NOI18N
        jbActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(jbNuevo)
                                .addGap(28, 28, 28)
                                .addComponent(jbGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(52, 52, 52)
                                .addComponent(jtfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(43, 43, 43)
                                    .addComponent(jLabel7)
                                    .addGap(10, 10, 10)
                                    .addComponent(jtfPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6))
                                    .addGap(61, 61, 61)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jcbRubro, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jsStock, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel8))))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(29, 29, 29)
                                    .addComponent(jtfDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbBuscar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbActualizar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(jcbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jcbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jtfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jtfDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jtfPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jcbRubro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8)
                            .addComponent(jsStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbGuardar)
                    .addComponent(jbEliminar)
                    .addComponent(jbSalir))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCodigoActionPerformed

    private void jtfDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfDescripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfDescripcionActionPerformed

    private void jtfPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfPrecioActionPerformed
    //Salir
    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed
    //Agregar nuevo producto
    private void jbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevoActionPerformed
        Object[] options = {"Si", "No"};
        if (validarCamposVacios() == false) {
            int confirm = JOptionPane.showOptionDialog(null, "¡Perderás estos datos! ¿Desea ingresar un producto nuevo? ", "",//contenido de la ventana,icon,msg,title
                    JOptionPane.YES_NO_CANCEL_OPTION, //3 botones si,otro,cancel
                    JOptionPane.QUESTION_MESSAGE,//tipo de icono
                    null, //null para icono por defecto
                    options,//objeto para las opciones
                    options[0]);//seleccion predeterminada
            if (confirm == 0) {
                limpiarCampos();
                enableNuevo(true);
            }
        } else {
            limpiarCampos();
            enableNuevo(true);
        }

    }//GEN-LAST:event_jbNuevoActionPerformed
    //Guardar y agregar producto al treeset
    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        String cod = jtfCodigo.getText();
        String descripcion = jtfDescripcion.getText();
        String precio = jtfPrecio.getText();
        String rubro = jcbRubro.getSelectedItem().toString();
        String stock = jsStock.getValue().toString();
        double precioD = 0;
        int codigo, stockI = 0;
        if (cod.isEmpty() || descripcion.isEmpty() || precio.isEmpty() || stock.equals("0")) {
            JOptionPane.showMessageDialog(this, "No debe haber campos vacíos");
            return;
        }
        try {
            codigo = Integer.parseInt(cod);
            precioD = Double.parseDouble(precio);
            stockI = Integer.parseInt(stock);
            Producto producto = new Producto(codigo, descripcion, precioD, stockI, rubro);
            listaProductos.add(producto);
            JOptionPane.showMessageDialog(this, "Producto agregado con éxito");
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error al ingresar los datos");
            return;
        }
        limpiarCampos();
        enableNuevo(false);
    }//GEN-LAST:event_jbGuardarActionPerformed
    //Elimina producto ingresado o ingresar producto a eliminar
    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        Eliminar e = new Eliminar();
        Object[] options = {"Si", "Eliminar otro producto", "Cancelar"};
        if (validarCamposVacios() == false) {
            int confirm = JOptionPane.showOptionDialog(null, "¿Desea Eliminar este producto?", "",//contenido de la ventana,icon,msg,title
                    JOptionPane.YES_NO_CANCEL_OPTION, //3 botones si,otro,cancel
                    JOptionPane.QUESTION_MESSAGE,//tipo de icono
                    null, //null para icono por defecto
                    options,//objeto para las opciones
                    options[0]);//seleccion predeterminada
            if (confirm == 0) {
                listaProductos.remove(prodEncontrado);
                JOptionPane.showMessageDialog(this, "Producto eliminado con éxito");
            } else if (confirm == 1) {
                Menu.jdpEscritorio.add(e);
                e.setVisible(true);
                e.moveToFront();
            }

        } else {
            Menu.jdpEscritorio.add(e);
            e.setVisible(true);
            e.moveToFront();
        }
        limpiarCampos();
        enableNuevo(false);
    }//GEN-LAST:event_jbEliminarActionPerformed
    //Categoria para filtrar productos en tabla
    private void jcbCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbCategoriaActionPerformed
        borrarFilas();
        String rubroSelect = (String) jcbCategoria.getSelectedItem();
        for (Producto it : listaProductos) {
            if (it.getRubro().toString().equals(rubroSelect)) {
                modelog.addRow(new Object[]{it.getCodigo(), it.getDescripcion(), it.getPrecio(), it.getStock()});
            } else if (rubroSelect.equals("TODOS")) {
                modelog.addRow(new Object[]{it.getCodigo(), it.getDescripcion(), it.getPrecio(), it.getStock()});
            }
        }

    }//GEN-LAST:event_jcbCategoriaActionPerformed
    //Metodo buscar producto atravez del codigo
    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        try {

            prodEncontrado = null;
            int codigo = Integer.parseInt(jtfCodigo.getText());

            for (Producto prod : listaProductos) {
                if (prod.getCodigo() == codigo) {
                    prodEncontrado = prod;
                    break;
                }
            }
            if (prodEncontrado == null) {
                JOptionPane.showMessageDialog(this, "No se encontro el producto");
            } else {
                jtfDescripcion.setText(prodEncontrado.getDescripcion());
                jtfPrecio.setText(prodEncontrado.getPrecio() + "");
                jsStock.setValue(prodEncontrado.getStock());
                jcbRubro.setSelectedItem(prodEncontrado.getRubro());
                jbEliminar.setEnabled(true);
            }
        } catch (NumberFormatException e) {

        }
    }//GEN-LAST:event_jbBuscarActionPerformed
    //Boton de refresh
    private void jbActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbActualizarActionPerformed
        borrarFilas();
        String rubroSelect = (String) jcbCategoria.getSelectedItem();
        for (Producto it : listaProductos) {
            if (it.getRubro().toString().equals(rubroSelect)) {
                modelog.addRow(new Object[]{it.getCodigo(), it.getDescripcion(), it.getPrecio(), it.getStock()});
            } else if (rubroSelect.equals("TODOS")) {
                modelog.addRow(new Object[]{it.getCodigo(), it.getDescripcion(), it.getPrecio(), it.getStock()});
            }
        }
    }//GEN-LAST:event_jbActualizarActionPerformed
    //Vacia los campos
    private void limpiarCampos() {
        jtfCodigo.setText("");
        jtfDescripcion.setText("");
        jtfPrecio.setText("0.00");
        jcbRubro.setSelectedIndex(0);
        jsStock.setValue(0);
        prodEncontrado = null;
    }
    //Activa o desactiva el enabled de todos los campos y botones
    private void enableNuevo(boolean flag) {
        jtfCodigo.setEnabled(flag);
        jtfDescripcion.setEnabled(flag);
        jtfPrecio.setEnabled(flag);
        jtfPrecio.setEditable(flag);
        jcbRubro.setEnabled(flag);
        jsStock.setEnabled(flag);
        jbBuscar.setEnabled(flag);
        //jbActualizar.setEnabled(flag);
        jbEliminar.setEnabled(true);
        jbGuardar.setEnabled(flag);
    }
    //Arma la tabla
    private void armarCabecera() {
        modelog.addColumn("Código");
        modelog.addColumn("Descripcion");
        modelog.addColumn("Precio");
        modelog.addColumn("Stock");
        jtTablaGestion.setModel(modelog);
    }
    //Borra las filas de productos en la tabla
    private void borrarFilas() {
        int f = jtTablaGestion.getRowCount() - 1; //cuenta las filas -1
        for (; f >= 0; f--) { //inicializa f arriba
            modelog.removeRow(f);
        }
    }
    //Comprueba si estan vacios o no todos o algunos de los cambios
    private boolean validarCamposVacios() {
        boolean flag = false;
        if (jtfCodigo.getText().equals("") && jtfDescripcion.getText().equals("") && jtfPrecio.getText().equals("0.00") && jsStock.getValue().equals(0)) {
            flag = true;
        }
        return flag;
    }
    //Metodo que usa el boton de actualizar tabla
    public void refreshTable() {
        jtTablaGestion.repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbActualizar;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbNuevo;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<String> jcbCategoria;
    private javax.swing.JComboBox<String> jcbRubro;
    private javax.swing.JSpinner jsStock;
    private javax.swing.JTable jtTablaGestion;
    private javax.swing.JTextField jtfCodigo;
    private javax.swing.JTextField jtfDescripcion;
    private javax.swing.JTextField jtfPrecio;
    // End of variables declaration//GEN-END:variables
}
