package frame.internals.eliminar;

import entitys.Producto;
import static frame.Menu.listaProductos;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author julan
 */
public class Eliminar extends javax.swing.JInternalFrame {

    private Producto prodEncontrado = null;
    private DefaultTableModel modelo = new DefaultTableModel() {
        public boolean esCeldaEditable(int f, int c) {
            //este metodo retorna v o f si la celda en la que esta es editable o no
            return false;
        }
    };

    /**
     * Creates new form Eliminar
     */
    public Eliminar() {
        initComponents();
        armarCabecera();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton2 = new javax.swing.JToggleButton();
        jbTodo = new javax.swing.JButton();
        jbBorrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtfCodigoAEliminar = new javax.swing.JTextField();
        jsCantidadAEliminar = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jtfMotivo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTablaEliminar = new javax.swing.JTable();
        jbCancelar = new javax.swing.JButton();

        jToggleButton2.setText("jToggleButton2");

        setTitle("Eliminar Productos");

        jbTodo.setText("Todo");
        jbTodo.setEnabled(false);
        jbTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbTodoActionPerformed(evt);
            }
        });

        jbBorrar.setBackground(new java.awt.Color(255, 255, 255));
        jbBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos netbeans/icons8-delete-64.png"))); // NOI18N
        jbBorrar.setText("Borrar Producto");
        jbBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBorrarActionPerformed(evt);
            }
        });

        jLabel1.setText("Codigo de Producto:");

        jLabel2.setText("Cantidades:");

        jtfCodigoAEliminar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfCodigoAEliminarKeyReleased(evt);
            }
        });

        jsCantidadAEliminar.setEnabled(false);

        jLabel3.setText("Motivo:");

        jtfMotivo.setEnabled(false);

        jtTablaEliminar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jtTablaEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtTablaEliminarMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtTablaEliminar);

        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfCodigoAEliminar)
                            .addComponent(jtfMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jsCantidadAEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbTodo, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(269, Short.MAX_VALUE)
                    .addComponent(jbCancelar)
                    .addGap(18, 18, 18)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfCodigoAEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jsCantidadAEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbTodo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jbBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(233, Short.MAX_VALUE)
                    .addComponent(jbCancelar)
                    .addGap(26, 26, 26)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //Borra del treeset el producto seleccionado
    private void jbBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBorrarActionPerformed
        try {
            prodEncontrado = null;
            int codigo = Integer.parseInt(jtfCodigoAEliminar.getText());
            int stock = Integer.parseInt(jsCantidadAEliminar.getValue().toString());
            String motivo = jtfMotivo.getText();
            for (Producto prod : listaProductos) {
                if (prod.getCodigo() == codigo) {
                    prodEncontrado = prod;
                    break;
                }
            }
            if (prodEncontrado == null) {
                JOptionPane.showMessageDialog(this, "No se encontro el producto");
            } else if (stock < prodEncontrado.getStock()) {
                prodEncontrado.setStock(prodEncontrado.getStock() - stock);
            } else if (stock > prodEncontrado.getStock()) {
                JOptionPane.showMessageDialog(this, "Excede la cantidad de productos a eliminar");
            } else {
                listaProductos.remove(prodEncontrado);
                JOptionPane.showMessageDialog(this, "Producto Eliminado con Ã©xito");
                dispose();
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error al ingresar los datos");
            return;
        }
    }//GEN-LAST:event_jbBorrarActionPerformed
    //Pone en cantidad todo lo que contenga el stock del producto
    private void jbTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbTodoActionPerformed
        try {
            boolean flag = false;
            int cant = 0;
            int codigo = Integer.parseInt(jtfCodigoAEliminar.getText());
            for (Producto it : listaProductos) {
                if (it.getCodigo() == codigo) {
                    cant = it.getStock();
                }
            }
            jsCantidadAEliminar.setValue(cant);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error al ingresar algun dato");
            return;
        }
    }//GEN-LAST:event_jbTodoActionPerformed

    private void jtfCodigoAEliminarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCodigoAEliminarKeyReleased
        borrarFilas(); //llamo al metodo para borrar filas al buscar
        for (Producto it : listaProductos) { //al ser el treeset static puedo acceder desde acÃ¡..
            String code = String.valueOf(it.getCodigo());
            if (code.startsWith(jtfCodigoAEliminar.getText().toLowerCase())) {
                // solo agrega comienza con la letra que pone el 
                modelo.addRow(new Object[]{it.getCodigo(), it.getDescripcion(), it.getStock()});
                //metodo para agregar al modelo(tabla) addRow con un object.
            }
        }
        jsCantidadAEliminar.setEnabled(true);
        jbTodo.setEnabled(true);
        jtfMotivo.setEnabled(true);
    }//GEN-LAST:event_jtfCodigoAEliminarKeyReleased
    //Sale del internal Eliminar
    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_jbCancelarActionPerformed
    //Pone en el campo del codigo el codigo clickeado en la table
    private void jtTablaEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtTablaEliminarMouseClicked
        int filaselected = jtTablaEliminar.getSelectedRow();
        int codigoSelected = (Integer) jtTablaEliminar.getValueAt(filaselected, 0);
        jtfCodigoAEliminar.setText(codigoSelected + "");
    }//GEN-LAST:event_jtTablaEliminarMouseClicked
    //Arma la tabla
    private void armarCabecera() {
        modelo.addColumn("CÃ³digo");
        modelo.addColumn("Descripcion");
        modelo.addColumn("Stock");
        jtTablaEliminar.setModel(modelo);
    }
    //Borra la filas no usadas de la tabla
    private void borrarFilas() {
        int f = jtTablaEliminar.getRowCount() - 1; //cuenta las filas -1
        for (; f >= 0; f--) { //inicializa f arriba
            modelo.removeRow(f);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JButton jbBorrar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbTodo;
    private javax.swing.JSpinner jsCantidadAEliminar;
    private javax.swing.JTable jtTablaEliminar;
    private javax.swing.JTextField jtfCodigoAEliminar;
    private javax.swing.JTextField jtfMotivo;
    // End of variables declaration//GEN-END:variables
}
